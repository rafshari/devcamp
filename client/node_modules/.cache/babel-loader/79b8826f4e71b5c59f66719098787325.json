{"ast":null,"code":"import axios from \"axios\";\nimport { REGISTER_FAIL, REGISTER_SUCCESS, LOGIN_FAIL, LOGIN_SUCCESS, LOAD_USER, AUTH_ERROR, LOGOUT } from \"./types\";\nimport setAuthToken from \"../../utils/setAuthToken\";\nimport { createAlert } from \"./alert\";\n\n// Get current logged in user\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n  try {\n    const res = await axios.get(\"/api/v1/auth/me\");\n    dispatch({\n      type: LOAD_USER,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: AUTH_ERROR,\n      payload: error\n    });\n  }\n};\n\n// Register user\nexport const register = formData => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.post(\"/api/v1/auth/register\", formData, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data.token\n    });\n    dispatch(loadUser());\n  } catch (error) {\n    if (error.response.data.message) {\n      const errors = error.response.data.message.split(\",\");\n      errors.forEach(errorMessage => dispatch(createAlert(errorMessage, \"danger\")));\n    }\n    dispatch({\n      type: REGISTER_FAIL,\n      payload: error\n    });\n  }\n};\n\n// Login user\nexport const login = formData => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.post(\"/api/v1/auth/login\", formData, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data.token\n    });\n    dispatch(loadUser());\n  } catch (error) {\n    if (error.response.data.message) {\n      const errors = error.response.data.message.split(\",\");\n      errors.forEach(errorMessage => dispatch(createAlert(errorMessage, \"danger\")));\n    }\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: error\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  try {\n    await axios.get(\"/api/v1/auth/logout\");\n    dispatch({\n      type: LOGOUT\n    });\n  } catch (error) {\n    dispatch({\n      type: AUTH_ERROR,\n      payload: error\n    });\n  }\n};","map":{"version":3,"names":["axios","REGISTER_FAIL","REGISTER_SUCCESS","LOGIN_FAIL","LOGIN_SUCCESS","LOAD_USER","AUTH_ERROR","LOGOUT","setAuthToken","createAlert","loadUser","dispatch","localStorage","token","res","get","type","payload","data","error","register","formData","config","headers","post","response","message","errors","split","forEach","errorMessage","login","logout"],"sources":["E:/2-myprojects/devcamp/client/src/redux/actions/auth.js"],"sourcesContent":["import axios from \"axios\";\nimport {\n  REGISTER_FAIL,\n  REGISTER_SUCCESS,\n  LOGIN_FAIL,\n  LOGIN_SUCCESS,\n  LOAD_USER,\n  AUTH_ERROR,\n  LOGOUT,\n} from \"./types\";\nimport setAuthToken from \"../../utils/setAuthToken\";\n\nimport { createAlert } from \"./alert\";\n\n// Get current logged in user\nexport const loadUser = () => async (dispatch) => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get(\"/api/v1/auth/me\");\n\n    dispatch({\n      type: LOAD_USER,\n      payload: res.data,\n    });\n  } catch (error) {\n    dispatch({\n      type: AUTH_ERROR,\n      payload: error,\n    });\n  }\n};\n\n// Register user\nexport const register = (formData) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const res = await axios.post(\"/api/v1/auth/register\", formData, config);\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data.token,\n    });\n\n    dispatch(loadUser());\n  } catch (error) {\n    if (error.response.data.message) {\n      const errors = error.response.data.message.split(\",\");\n      errors.forEach((errorMessage) =>\n        dispatch(createAlert(errorMessage, \"danger\"))\n      );\n    }\n\n    dispatch({\n      type: REGISTER_FAIL,\n      payload: error,\n    });\n  }\n};\n\n// Login user\nexport const login = (formData) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const res = await axios.post(\"/api/v1/auth/login\", formData, config);\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data.token,\n    });\n\n    dispatch(loadUser());\n  } catch (error) {\n    if (error.response.data.message) {\n      const errors = error.response.data.message.split(\",\");\n      errors.forEach((errorMessage) =>\n        dispatch(createAlert(errorMessage, \"danger\"))\n      );\n    }\n\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: error,\n    });\n  }\n};\n\nexport const logout = () => async (dispatch) => {\n  try {\n    await axios.get(\"/api/v1/auth/logout\");\n    dispatch({\n      type: LOGOUT,\n    });\n  } catch (error) {\n    dispatch({\n      type: AUTH_ERROR,\n      payload: error,\n    });\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}