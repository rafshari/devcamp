{"ast":null,"code":"import axios from \"axios\";\nimport { USER_ERROR, LOGIN_SUCCESS } from \"./types\";\nimport { createAlert } from \"./alert\";\nimport { loadUser } from \"./auth\";\n\n// Update details (name and email)\nexport const updateUserDetails = formData => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    await axios.patch(\"/api/v1/auth/me/updatedetails\", formData, config);\n    dispatch(loadUser());\n    dispatch(createAlert(\"Your credentials have been updated.\", \"success\"));\n  } catch (error) {\n    if (error.response.data.message) {\n      const errors = error.response.data.message.split(\",\");\n      errors.forEach(errorMessage => dispatch(createAlert(errorMessage, \"danger\")));\n    }\n    dispatch({\n      type: USER_ERROR,\n      payload: error.response\n    });\n  }\n};\n\n// Update/Change password\nexport const updateUserPassword = formData => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    await axios.patch(\"/api/v1/auth/me/updatepassword\", formData, config);\n    dispatch(createAlert(\"Your password has been updated.\", \"success\"));\n  } catch (error) {\n    if (error.response.data.message) {\n      const errors = error.response.data.message.split(\",\");\n      errors.forEach(errorMessage => dispatch(createAlert(errorMessage, \"danger\")));\n    }\n    dispatch({\n      type: USER_ERROR,\n      payload: error.response\n    });\n  }\n};\n\n// Forgot password/send email\nexport const forgotPassword = email => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    await axios.post(\"/api/v1/auth/forgotpassword\", {\n      email\n    }, config);\n    dispatch(createAlert(\"We have sent you an email, you have 10 minutes to update your password.\", \"success\", 5000));\n  } catch (error) {\n    if (error.response.data.message) {\n      const errors = error.response.data.message.split(\",\");\n      errors.forEach(errorMessage => dispatch(createAlert(errorMessage, \"danger\")));\n    }\n    dispatch({\n      type: USER_ERROR,\n      payload: error.response\n    });\n  }\n};\n\n// Reset password with token provided from forgot password\nexport const resetPassword = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      password,\n      resettoken\n    } = formData;\n    const res = await axios.put(`/api/v1/auth/resetpassword/${resettoken}`, {\n      password\n    }, config);\n    dispatch(createAlert(\"Password has been reset.\", \"success\", 2000));\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data.token\n    });\n    setTimeout(() => {\n      history.push(\"/bootcamps\");\n    }, 2000);\n  } catch (error) {\n    if (error.response.data.message) {\n      const errors = error.response.data.message.split(\",\");\n      errors.forEach(errorMessage => dispatch(createAlert(errorMessage, \"danger\")));\n    }\n    dispatch({\n      type: USER_ERROR,\n      payload: error.response\n    });\n  }\n};","map":{"version":3,"names":["axios","USER_ERROR","LOGIN_SUCCESS","createAlert","loadUser","updateUserDetails","formData","dispatch","config","headers","patch","error","response","data","message","errors","split","forEach","errorMessage","type","payload","updateUserPassword","forgotPassword","email","post","resetPassword","history","password","resettoken","res","put","token","setTimeout","push"],"sources":["E:/2-myprojects/devcamp/client/src/redux/actions/users.js"],"sourcesContent":["import axios from \"axios\";\nimport { USER_ERROR, LOGIN_SUCCESS } from \"./types\";\nimport { createAlert } from \"./alert\";\nimport { loadUser } from \"./auth\";\n\n// Update details (name and email)\nexport const updateUserDetails = (formData) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    await axios.patch(\"/api/v1/auth/me/updatedetails\", formData, config);\n\n    dispatch(loadUser());\n    dispatch(createAlert(\"Your credentials have been updated.\", \"success\"));\n  } catch (error) {\n    if (error.response.data.message) {\n      const errors = error.response.data.message.split(\",\");\n      errors.forEach((errorMessage) =>\n        dispatch(createAlert(errorMessage, \"danger\"))\n      );\n    }\n    dispatch({\n      type: USER_ERROR,\n      payload: error.response,\n    });\n  }\n};\n\n// Update/Change password\nexport const updateUserPassword = (formData) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    await axios.patch(\"/api/v1/auth/me/updatepassword\", formData, config);\n\n    dispatch(createAlert(\"Your password has been updated.\", \"success\"));\n  } catch (error) {\n    if (error.response.data.message) {\n      const errors = error.response.data.message.split(\",\");\n      errors.forEach((errorMessage) =>\n        dispatch(createAlert(errorMessage, \"danger\"))\n      );\n    }\n\n    dispatch({\n      type: USER_ERROR,\n      payload: error.response,\n    });\n  }\n};\n\n// Forgot password/send email\nexport const forgotPassword = (email) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    await axios.post(\"/api/v1/auth/forgotpassword\", { email }, config);\n\n    dispatch(\n      createAlert(\n        \"We have sent you an email, you have 10 minutes to update your password.\",\n        \"success\",\n        5000\n      )\n    );\n  } catch (error) {\n    if (error.response.data.message) {\n      const errors = error.response.data.message.split(\",\");\n      errors.forEach((errorMessage) =>\n        dispatch(createAlert(errorMessage, \"danger\"))\n      );\n    }\n\n    dispatch({\n      type: USER_ERROR,\n      payload: error.response,\n    });\n  }\n};\n\n// Reset password with token provided from forgot password\nexport const resetPassword = (formData, history) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const { password, resettoken } = formData;\n\n    const res = await axios.put(\n      `/api/v1/auth/resetpassword/${resettoken}`,\n      { password },\n      config\n    );\n\n    dispatch(createAlert(\"Password has been reset.\", \"success\", 2000));\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data.token,\n    });\n\n    setTimeout(() => {\n      history.push(\"/bootcamps\");\n    }, 2000);\n  } catch (error) {\n    if (error.response.data.message) {\n      const errors = error.response.data.message.split(\",\");\n      errors.forEach((errorMessage) =>\n        dispatch(createAlert(errorMessage, \"danger\"))\n      );\n    }\n\n    dispatch({\n      type: USER_ERROR,\n      payload: error.response,\n    });\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}