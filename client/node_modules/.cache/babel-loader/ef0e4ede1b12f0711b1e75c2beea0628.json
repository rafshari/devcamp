{"ast":null,"code":"import axios from \"axios\";\nimport { GET_BOOTCAMPS, GET_BOOTCAMP, ADD_BOOTCAMP, REMOVE_BOOTCAMP, BOOTCAMP_ERROR, IS_LOADING, ADD_PHOTO } from \"./types\";\nimport composeUrl from \"../../utils/composeUrl\";\nimport { createAlert } from \"./alert\";\nimport { loadUser } from \"./auth\";\n// let savedUrl;\n\n// Fetch all bootcamps\nexport const getBootcamps = (filters, location) => async dispatch => {\n  let url = \"/api/v1/bootcamps?limit=4\";\n  if (filters) {\n    // if (savedUrl && filters.page) {\n    //   url = composeUrl(savedUrl, filters);\n    // }\n    // Get bootcamps with filters if provided\n    url = composeUrl(url, filters);\n  } else if (location) {\n    // Get bootcamps by radius\n    const {\n      zipcode,\n      miles\n    } = location;\n    // Check if both zipcode and miles are not empty\n    if (zipcode && miles) {\n      url = `/api/v1/bootcamps/radius/${zipcode}/${miles}`;\n    }\n  }\n  try {\n    const res = await axios.get(url);\n    dispatch({\n      type: GET_BOOTCAMPS,\n      payload: res.data\n    });\n\n    // if (url !== composeUrl(url, filters) &&  !filters.page && res.data.pagination.next && res.data.pagination.next) {\n    //   savedUrl = url\n    // }\n  } catch (error) {\n    dispatch({\n      type: BOOTCAMP_ERROR,\n      payload: error\n    });\n  }\n};\n\n//   Get single bootcamp\nexport const getBootcamp = bootcampId => async dispatch => {\n  try {\n    const res = await axios.get(`/api/v1/bootcamps/${bootcampId}`);\n    dispatch({\n      type: GET_BOOTCAMP,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: BOOTCAMP_ERROR,\n      payload: error\n    });\n  }\n};\n\n//   Add bootcamp\nexport const addBootcamp = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    await axios.post(\"/api/v1/bootcamps\", formData, config);\n    dispatch({\n      type: IS_LOADING\n    });\n    dispatch(loadUser());\n    history.push(\"/manage-bootcamp\");\n  } catch (error) {\n    dispatch({\n      type: BOOTCAMP_ERROR,\n      payload: error\n    });\n  }\n};\n\n// Update bootcamp\nexport const updateBootcamp = (bootcampId, formData) => async dispatch => {\n  try {\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.put(`/api/v1/bootcamps/${bootcampId}`, formData, config);\n    dispatch({\n      type: ADD_BOOTCAMP,\n      payload: res.data\n    });\n    dispatch(createAlert(\"Bootcamp updated.\", \"success\", 3000));\n  } catch (error) {\n    dispatch({\n      type: BOOTCAMP_ERROR,\n      payload: error\n    });\n  }\n};\n\n// Upload bootcamp photo\nexport const uploadBootcampPhoto = (bootcampId, file) => async dispatch => {\n  try {\n    const config = {\n      header: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    };\n    const res = await axios.put(`/api/v1/bootcamps/${bootcampId}/photo`, file, config);\n    dispatch(createAlert(\"Photo uploaded.\", \"success\", 3000));\n    dispatch({\n      type: IS_LOADING\n    });\n    dispatch({\n      type: ADD_PHOTO,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch(createAlert(\"An error occured with the file upload.\", \"danger\", 3000));\n    dispatch({\n      type: BOOTCAMP_ERROR,\n      payload: error\n    });\n  }\n};\n\n// Delete bootcamp\nexport const deleteBootcamp = bootcampId => async dispatch => {\n  if (window.confirm(\"Are you sure? This action can NOT be undone.\")) {\n    try {\n      await axios.delete(`/api/v1/bootcamps/${bootcampId}`);\n      dispatch({\n        type: REMOVE_BOOTCAMP\n      });\n      dispatch(loadUser());\n    } catch (error) {\n      dispatch({\n        type: BOOTCAMP_ERROR,\n        payload: error\n      });\n    }\n  }\n};\n\n// Make the page load after a request is sent\nexport const isLoading = () => dispatch => {\n  dispatch({\n    type: IS_LOADING\n  });\n};","map":{"version":3,"names":["axios","GET_BOOTCAMPS","GET_BOOTCAMP","ADD_BOOTCAMP","REMOVE_BOOTCAMP","BOOTCAMP_ERROR","IS_LOADING","ADD_PHOTO","composeUrl","createAlert","loadUser","getBootcamps","filters","location","dispatch","url","zipcode","miles","res","get","type","payload","data","error","getBootcamp","bootcampId","addBootcamp","formData","history","config","header","post","push","updateBootcamp","put","uploadBootcampPhoto","file","deleteBootcamp","window","confirm","delete","isLoading"],"sources":["E:/2-myprojects/devcamp/client/src/redux/actions/bootcamps.js"],"sourcesContent":["import axios from \"axios\";\nimport {\n  GET_BOOTCAMPS,\n  GET_BOOTCAMP,\n  ADD_BOOTCAMP,\n  REMOVE_BOOTCAMP,\n  BOOTCAMP_ERROR,\n  IS_LOADING,\n  ADD_PHOTO,\n} from \"./types\";\n\nimport composeUrl from \"../../utils/composeUrl\";\nimport { createAlert } from \"./alert\";\nimport { loadUser } from \"./auth\";\n// let savedUrl;\n\n// Fetch all bootcamps\nexport const getBootcamps = (filters, location) => async (dispatch) => {\n  let url = \"/api/v1/bootcamps?limit=4\";\n  if (filters) {\n    // if (savedUrl && filters.page) {\n    //   url = composeUrl(savedUrl, filters);\n    // }\n    // Get bootcamps with filters if provided\n    url = composeUrl(url, filters);\n  } else if (location) {\n    // Get bootcamps by radius\n    const { zipcode, miles } = location;\n    // Check if both zipcode and miles are not empty\n    if (zipcode && miles) {\n      url = `/api/v1/bootcamps/radius/${zipcode}/${miles}`;\n    }\n  }\n\n  try {\n    const res = await axios.get(url);\n\n    dispatch({\n      type: GET_BOOTCAMPS,\n      payload: res.data,\n    });\n\n    // if (url !== composeUrl(url, filters) &&  !filters.page && res.data.pagination.next && res.data.pagination.next) {\n    //   savedUrl = url\n    // }\n  } catch (error) {\n    dispatch({\n      type: BOOTCAMP_ERROR,\n      payload: error,\n    });\n  }\n};\n\n//   Get single bootcamp\nexport const getBootcamp = (bootcampId) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/v1/bootcamps/${bootcampId}`);\n\n    dispatch({\n      type: GET_BOOTCAMP,\n      payload: res.data,\n    });\n  } catch (error) {\n    dispatch({\n      type: BOOTCAMP_ERROR,\n      payload: error,\n    });\n  }\n};\n\n//   Add bootcamp\nexport const addBootcamp = (formData, history) => async (dispatch) => {\n  try {\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    await axios.post(\"/api/v1/bootcamps\", formData, config);\n\n    dispatch({\n      type: IS_LOADING,\n    });\n\n    dispatch(loadUser());\n\n    history.push(\"/manage-bootcamp\");\n  } catch (error) {\n    dispatch({\n      type: BOOTCAMP_ERROR,\n      payload: error,\n    });\n  }\n};\n\n// Update bootcamp\nexport const updateBootcamp = (bootcampId, formData) => async (dispatch) => {\n  try {\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const res = await axios.put(\n      `/api/v1/bootcamps/${bootcampId}`,\n      formData,\n      config\n    );\n\n    dispatch({\n      type: ADD_BOOTCAMP,\n      payload: res.data,\n    });\n\n    dispatch(createAlert(\"Bootcamp updated.\", \"success\", 3000));\n  } catch (error) {\n    dispatch({\n      type: BOOTCAMP_ERROR,\n      payload: error,\n    });\n  }\n};\n\n// Upload bootcamp photo\nexport const uploadBootcampPhoto = (bootcampId, file) => async (dispatch) => {\n  try {\n    const config = {\n      header: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    };\n\n    const res = await axios.put(\n      `/api/v1/bootcamps/${bootcampId}/photo`,\n      file,\n      config\n    );\n\n    dispatch(createAlert(\"Photo uploaded.\", \"success\", 3000));\n\n    dispatch({\n      type: IS_LOADING,\n    });\n\n    dispatch({\n      type: ADD_PHOTO,\n      payload: res.data,\n    });\n  } catch (error) {\n    dispatch(\n      createAlert(\"An error occured with the file upload.\", \"danger\", 3000)\n    );\n    dispatch({\n      type: BOOTCAMP_ERROR,\n      payload: error,\n    });\n  }\n};\n\n// Delete bootcamp\nexport const deleteBootcamp = (bootcampId) => async (dispatch) => {\n  if (window.confirm(\"Are you sure? This action can NOT be undone.\")) {\n    try {\n      await axios.delete(`/api/v1/bootcamps/${bootcampId}`);\n\n      dispatch({\n        type: REMOVE_BOOTCAMP,\n      });\n\n      dispatch(loadUser());\n    } catch (error) {\n      dispatch({\n        type: BOOTCAMP_ERROR,\n        payload: error,\n      });\n    }\n  }\n};\n\n// Make the page load after a request is sent\nexport const isLoading = () => (dispatch) => {\n  dispatch({\n    type: IS_LOADING,\n  });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}